<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="2" ignored="0" total="6" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="RegisterSuite" duration-ms="41975" started-at="2020-10-08T21:08:00 EET" finished-at="2020-10-08T21:08:42 EET">
    <groups>
    </groups>
    <test name="Test" duration-ms="41975" started-at="2020-10-08T21:08:00 EET" finished-at="2020-10-08T21:08:42 EET">
      <class name="tests.User_RegisterSuccessfullyTest">
        <test-method status="PASS" signature="StartDriver(java.lang.String)[pri:0, instance:tests.User_RegisterSuccessfullyTest@3e57cd70]" name="StartDriver" is-config="true" duration-ms="1110" started-at="2020-10-08T21:07:59 EET" finished-at="2020-10-08T21:08:00 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- StartDriver -->
        <test-method status="PASS" signature="setDriver(org.testng.ITestContext)[pri:0, instance:tests.User_RegisterSuccessfullyTest@3e57cd70]" name="setDriver" is-config="true" duration-ms="1" started-at="2020-10-08T21:08:00 EET" finished-at="2020-10-08T21:08:00 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@3f49e266]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setDriver -->
        <test-method status="PASS" signature="user_SignupSuccessfully(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.User_RegisterSuccessfullyTest@3e57cd70]" name="user_SignupSuccessfully" duration-ms="12577" started-at="2020-10-08T21:08:00 EET" data-provider="ExcelData" finished-at="2020-10-08T21:08:13 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Menna]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mohamed]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.2566345454E10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[M1@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Abc@123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- user_SignupSuccessfully -->
        <test-method status="PASS" signature="user_SignupSuccessfully(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.User_RegisterSuccessfullyTest@3e57cd70]" name="user_SignupSuccessfully" duration-ms="9270" started-at="2020-10-08T21:08:13 EET" data-provider="ExcelData" finished-at="2020-10-08T21:08:22 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Menna]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mohamed]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.2566345454E10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[M2@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Abc@123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- user_SignupSuccessfully -->
        <test-method status="PASS" signature="user_SignupSuccessfully(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.User_RegisterSuccessfullyTest@3e57cd70]" name="user_SignupSuccessfully" duration-ms="9220" started-at="2020-10-08T21:08:22 EET" data-provider="ExcelData" finished-at="2020-10-08T21:08:31 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Menna]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mohamed]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.2566345454E10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[M3@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Abc@123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- user_SignupSuccessfully -->
        <test-method status="FAIL" signature="user_SignupSuccessfully(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.User_RegisterSuccessfullyTest@3e57cd70]" name="user_SignupSuccessfully" duration-ms="9885" started-at="2020-10-08T21:08:31 EET" data-provider="ExcelData" finished-at="2020-10-08T21:08:41 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Menna]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mohamed]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.2566345454E10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[M3]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Abc@123456]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for Pages.RegistrationPage$1@2996b9e4 (tried for 5 second(s) with 500 milliseconds interval)
Build info: version: '4.0.0-alpha-5', revision: 'b3a0d621cc'
System info: host: 'sit-HP', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.4.0-48-generic', java.version: '1.8.0_261'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.121, chrome: {chromedriverVersion: 85.0.4183.87 (cd6713ebf92fa..., userDataDir: /tmp/.com.google.Chrome.pqt7sR}, goog:chromeOptions: {debuggerAddress: localhost:37991}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 09499158aaa7c41f6853e45a01c64d6e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for Pages.RegistrationPage$1@2996b9e4 (tried for 5 second(s) with 500 milliseconds interval)
Build info: version: '4.0.0-alpha-5', revision: 'b3a0d621cc'
System info: host: 'sit-HP', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.4.0-48-generic', java.version: '1.8.0_261'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 85.0.4183.121, chrome: {chromedriverVersion: 85.0.4183.87 (cd6713ebf92fa..., userDataDir: /tmp/.com.google.Chrome.pqt7sR}, goog:chromeOptions: {debuggerAddress: localhost:37991}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: LINUX, platformName: LINUX, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 09499158aaa7c41f6853e45a01c64d6e
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:138)
at org.openqa.selenium.support.ui.FluentWait.lambda$checkConditionInLoop$2(FluentWait.java:255)
at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1604)
at java.util.concurrent.CompletableFuture$AsyncSupply.exec(CompletableFuture.java:1596)
at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:172)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- user_SignupSuccessfully -->
        <test-method status="FAIL" signature="user_SignupSuccessfully(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.User_RegisterSuccessfullyTest@3e57cd70]" name="user_SignupSuccessfully" duration-ms="6" started-at="2020-10-08T21:08:42 EET" data-provider="ExcelData" finished-at="2020-10-08T21:08:42 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Menna]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mohamed]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[1.2566345454E10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[M4@gmail.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Abc@123456]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchSessionException">
            <message>
              <![CDATA[Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.0.0-alpha-5', revision: 'b3a0d621cc'
System info: host: 'sit-HP', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.4.0-48-generic', java.version: '1.8.0_261'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchSessionException: Session ID is null. Using WebDriver after calling quit()?
Build info: version: '4.0.0-alpha-5', revision: 'b3a0d621cc'
System info: host: 'sit-HP', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.4.0-48-generic', java.version: '1.8.0_261'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:128)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:582)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:282)
at Pages.RegistrationPage.<init>(RegistrationPage.java:31)
at tests.User_RegisterSuccessfullyTest.user_SignupSuccessfully(User_RegisterSuccessfullyTest.java:29)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchSessionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- user_SignupSuccessfully -->
        <test-method status="SKIP" signature="user_Login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.User_RegisterSuccessfullyTest@3e57cd70]" name="user_Login" duration-ms="0" started-at="2020-10-08T21:08:42 EET" data-provider="ExcelData" depends-on-methods="tests.User_RegisterSuccessfullyTest.user_SignupSuccessfully" finished-at="2020-10-08T21:08:42 EET">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method User_RegisterSuccessfullyTest.user_Login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.User_RegisterSuccessfullyTest@3e57cd70] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method User_RegisterSuccessfullyTest.user_Login(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.User_RegisterSuccessfullyTest@3e57cd70] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- user_Login -->
      </class> <!-- tests.User_RegisterSuccessfullyTest -->
    </test> <!-- Test -->
  </suite> <!-- RegisterSuite -->
</testng-results>
